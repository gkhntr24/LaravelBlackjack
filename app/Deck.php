<?php

namespace App;

use Illuminate\Database\Eloquent\Model;

class Deck extends Model
{
    const SIZE = 52;
    const MULTIPLIER=6;
    const CARD_THRESHOLD=.4;

    protected $guarded = [
        'id',
        'created_at',
        'updated_at',
    ];

    protected $casts = [
        'cards' => 'array',
    ];

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        self::creating(function (self $deck){
            if(!$deck->cards)
            {
                $all_cards=[];
                for ($i=0;$i<self::MULTIPLIER;$i++)
                {
                    foreach (['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'] as $face) {
                        foreach (['S', 'C', 'H', 'D'] as $suit) {
                            $all_cards[] = "{$face}{$suit}";
                        }
                    }
                }
                $deck->cards= $all_cards;
            }
        });
    }



    public function shuffleDeck()
    {
        $card=collect($this->cards);
        $this->cards=$card->shuffle();
        $this->save();
    }

    public function takeCard($count=1)
    {
        $card=collect($this->cards);
        $taken_cards=$card->splice(0,$count);
        $this->cards=$card;
        $this->save();
        return $taken_cards;
    }

    public function getCardCountAttribute()
    {
        return count($this->cards);
    }

    public function getIsDoneAttribute()
    {
        return $this->card_count <= self::SIZE * self::MULTIPLIER* self::CARD_THRESHOLD;
    }

    public function game()
    {
        return $this->hasOne('App\BjGame','deck_id','id');
    }


}
